#!/usr/bin/with-contenv bashio
# ==============================================================================
# Home Assistant Community Add-on: LiveKit Server
# Runs the LiveKit server
# ==============================================================================

bashio::log.info "Starting LiveKit server..."

# Create and ensure proper ownership of livekit directories
mkdir -p /var/lib/livekit /var/log/livekit /etc/livekit /data/livekit
chown -R livekit:livekit /var/lib/livekit
chown -R livekit:livekit /var/log/livekit
chown -R livekit:livekit /etc/livekit
chown -R livekit:livekit /data/livekit

# Change to livekit working directory
cd /var/lib/livekit || bashio::exit.nok "Could not change to LiveKit working directory"

# Get verbose setting for additional logging
VERBOSE=$(bashio::config 'verbose')
LOG_LEVEL=$(bashio::config 'log_level')

if bashio::var.true "${VERBOSE}"; then
    bashio::log.info "Starting LiveKit with verbose logging enabled (${LOG_LEVEL})"
else
    bashio::log.info "Starting LiveKit with ${LOG_LEVEL} logging"
fi

# Export environment variables for LiveKit
export LIVEKIT_CONFIG_FILE="/etc/livekit/livekit.yaml"

# Check if config file exists and show contents for debugging
bashio::log.info "Checking LiveKit configuration file..."
if [[ ! -f "${LIVEKIT_CONFIG_FILE}" ]]; then
    bashio::log.fatal "LiveKit configuration file not found at ${LIVEKIT_CONFIG_FILE}"
    bashio::exit.nok
fi

bashio::log.info "Configuration file exists, showing contents:"
cat "${LIVEKIT_CONFIG_FILE}"

# Test LiveKit binary
bashio::log.info "Testing LiveKit binary..."
livekit-server --version || bashio::log.warning "Could not get LiveKit version"

# Log startup information
bashio::log.info "LiveKit server starting with configuration:"
bashio::log.info "  Config file: ${LIVEKIT_CONFIG_FILE}"
bashio::log.info "  Working directory: $(pwd)"
bashio::log.info "  User: $(whoami)"

# Execute LiveKit server
# Note: Running as root is acceptable for Home Assistant addons
# We could switch to livekit user, but for simplicity and HA addon compatibility, 
# we'll run as root (which is the standard for HA addons)
exec livekit-server --config "${LIVEKIT_CONFIG_FILE}"
